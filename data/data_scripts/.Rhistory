load("/Users/dancook/Dropbox/Andersen lab/LabFolders/Stefan/Projects/Run_EMMA/emma_snps.Rda")
load("/Users/dancook/Dropbox/Andersen lab/LabFolders/Stefan/Projects/Run_EMMA/full_kinship_matrix.Rda")
load("/Users/dancook/Dropbox/Andersen lab/LabFolders/Stefan/Projects/Run_EMMA/proc.1a.Rda")
load("/Users/dancook/Dropbox/Andersen lab/LabFolders/Stefan/Projects/Run_EMMA/proc.1b.Rda")
pheno <- proc.1a
for (i in 1:29){
pheno[[i]] <- rbind(proc.1a[[i]], proc.1b[[i]])
pheno[[i]] <- pheno[[i]][pheno[[i]]$strain != "CB4856",]
pheno[[i]] <- pheno[[i]][!is.na(as.numeric(pheno[[i]]$col)),]
}
myfun <- function(pheno){
strains <- pheno$strain
ph <- data.frame(trait = pheno[, c(4:82)], row.names = strains)
ph <- ph[order(row.names(ph)),]
ph <- select(ph, -trait.assay)
ph <- t(ph)
ph <- ph[,colSums(is.na(ph))<nrow(ph)]
return(ph)
}
for(i in 1:29){
pheno[[i]] <- myfun(pheno[[i]])
}
get.strains <- function(x){
names <- colnames(x)
names <- t(names)
colnames(names) <- names[1,]
return(names)
}
list.strains <- llply(pheno, get.strains)
load("~/Dropbox/Andersen lab/R code/Association/full_assn_set_calls.RData")
convertnum <- function(x){as.numeric(as.numeric(factor(x))==1)}
snps.fun <- function(df){
emma.snps <- apply(df, 1, convertnum)
emma.snps <- t(emma.snps)
colnames(emma.snps) <- colnames(df)
emma.snps <- emma.snps[,order(colnames(emma.snps))]
return(emma.snps)
}
e.snps <- snps.fun(full_assn_set_calls)
red.snps <- list.strains
for(i in 1:29){
red.snps[[i]] <- e.snps[,colnames(e.snps)%in%list.strains[[i]][1,]]
}
##############** red.kin ***########################################### generate a list of 30 kinship matrices and reduce them by the strains
setwd("~/Dropbox/Andersen lab/WormReagents/C. elegans WI info/")
snps <- read.delim("41188SNPset.txt")
all.snps <- snps.fun(snps)
colnames(kin) <- colnames(all.snps)
row.names(kin) <- colnames(all.snps)
red.kin <- list.strains
for(i in 1:29){
red.kin[[i]] <- kin[row.names(kin)%in%list.strains[[i]][1,],colnames(kin)%in%list.strains[[i]][1,]]
}
x <- pheno[[1]]
y <- red.snps[[1]]
z <- red.kin[[1]]
View(x)
View(y)
View(z)
setwd("/Users/dancook/Documents/Spring Rotation/Variant-Caller-Pipeline/data")
>>scanVcfHeader
??scanVcfHeader
scanVcfHeader("../raw/vcf/test.txt.Q10.vcf.gz")
library(VariantAnnotation)
f
scanVcfHeader("../raw/vcf/test.txt.Q10.vcf.gz")
scanVcfHeader("../raw/vcf/test.txt.Q10.vcf")
getwd()
setwd("/Users/dancook/Documents/Spring Rotation/Variant-Caller-Pipeline/data/data_scripts")
scanVcfHeader("../raw/vcf/test.txt.Q10.vcf")
scanVcfHeader("../raw/vcf/test.txt.Q10.vcf.gz")
vcf <- scanVcfHeader("../raw/vcf/test.txt.Q10.vcf.gz")
rm(list=ls())
setwd("/Users/dancook/Documents/Spring Rotation/Variant-Caller-Pipeline/data/data_scripts")
library(VariantAnnotation)
vcf <- scanVcfHeader("../raw/vcf/test.txt.Q10.vcf.gz")
vcf$samples
vcf@samples
vcf$INFO
vcf <- scanVcf("../raw/vcf/test.txt.Q10.vcf.gz")
View(vcf)
vcf@seqnames
vcf$seqnames
vcf$
att
attributes(vcf)
vcf$rowData
vcf <- readVcf("../raw/vcf/test.txt.Q10.vcf.gz")
vcf <- readVcf("../raw/vcf/test.txt.Q10.vcf.gz","ce10")
vcf <- readVcf("../raw/vcf/test.txt.Q10.vcf.gz")
vcf <- readVcf("../raw/vcf/test.txt.Q10.vcf.gz", genome="ce10")
header(vcf)
samples(header(vcf))
qual(vcf)
hist(qual(vcf))
hist(DS[DS != 0], breaks=seq(0, 2, by=0.05),     main="DS non-zero values", xlab="DS")
geno(vcf)
geno(vcf)$GT
geno(vcf)
geno(vcf)$DP
